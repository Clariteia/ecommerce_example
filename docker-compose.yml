version: "3.9"

services:
  zookeeper:
    restart: always
    image: wurstmeister/zookeeper:latest

  kafka:
    restart: always
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  postgres:
    restart: always
    image: postgres
    volumes:
      - postgres_volume:/var/lib/postgresql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=minos
      - POSTGRES_PASSWORD=min0s

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]

  discovery-service:
    name: discovery-service
    restart: always
    build: ./discovery
    command: discovery start config.yml
    environment:
      - DISCOVERY_SERVICE_DB_HOST=redis

    ports:
      - 8090:8080
    depends_on:
      - redis

  microservice-product:
    restart: always
    build:
      context: ./microservices/product
    command: bash -c 'PGPASSWORD=min0s psql -U minos -h postgres -tc "CREATE DATABASE product_db OWNER minos;"; python -m src start'
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka

    ports:
      - 8081:8081
    depends_on:
      - postgres
      - kafka

  microservice-shipment:
    restart: always
    build:
      context: ./microservices/shipment
    command: bash -c 'PGPASSWORD=min0s psql -U minos -h postgres -tc "CREATE DATABASE shipment_db OWNER minos;"; python -m src start'
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka

    ports:
      - 8082:8082
    depends_on:
      - postgres
      - kafka

volumes:
  postgres_volume:
