version: "3.9"

services:
  zookeeper:
    restart: always
    image: wurstmeister/zookeeper:latest
    logging:
        driver: none

  kafka:
    restart: always
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    logging:
        driver: none

  postgres:
    restart: always
    build: external/postgres
    volumes:
      - postgres_volume:/var/lib/postgresql
    environment:
      - POSTGRES_MULTIPLE_DATABASES=order_db,product_db,ticket_db,payment_db
      - POSTGRES_USER=minos
      - POSTGRES_PASSWORD=min0s
    logging:
        driver: none

  redis:
    image: redis:latest
    command: "redis-server"
    logging:
        driver: none

# FIXME: Configure tavern
#  tavern:
#    restart: always
#    build: external/tavern

  api-gateway:
    restart: always
    build: ./api_gateway
    ports:
      - 5566:5566
    environment:
      - PYTHONPATH=/api_gateway
    depends_on:
      - discovery

  discovery:
    restart: always
    build: ./external/discovery
    environment:
      - DISCOVERY_SERVICE_DB_HOST=redis
    depends_on:
      - redis

  microservice-order:
    restart: always
    build: microservices/order
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    depends_on:
      - postgres
      - kafka
      - discovery

  microservice-product:
    restart: always
    build: microservices/product
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    depends_on:
      - postgres
      - kafka
      - discovery

  microservice-ticket:
    restart: always
    build: microservices/ticket
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    depends_on:
      - postgres
      - kafka
      - discovery

  microservice-payment:
    restart: always
    build: microservices/payment
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    depends_on:
      - postgres
      - kafka
      - discovery

volumes:
  postgres_volume:
