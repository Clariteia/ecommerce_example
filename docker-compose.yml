version: "3.9"

services:
  zookeeper:
    restart: always
    image: wurstmeister/zookeeper:latest

  kafka:
    restart: always
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  postgres:
    restart: always
    build: external/postgres
    volumes:
      - postgres_volume:/var/lib/postgresql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_MULTIPLE_DATABASES=order_db,product_db,ticket_db,payment_db
      - POSTGRES_USER=minos
      - POSTGRES_PASSWORD=min0s

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]

  api-gateway:
    restart: always
    build: ./api_gateway
    command: api_gateway start config.yml
    ports:
      - 5566:5566
    environment:
      - PYTHONPATH=/api_gateway

  discovery:
    restart: always
    build: ./external/discovery
    environment:
      - DISCOVERY_SERVICE_DB_HOST=redis
    ports:
      - 8090:8080
    depends_on:
      - redis

  microservice-order:
    restart: always
    build: microservices/order
    command: python -m src.order start
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    ports:
      - 8083:8083
    depends_on:
      - postgres
      - kafka

  microservice-product:
    restart: always
    build: microservices/product
    command: python -m src.product start
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    ports:
      - 8081:8081
    depends_on:
      - postgres
      - kafka

  microservice-ticket:
    restart: always
    build: microservices/ticket
    command: python -m src.ticket start
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    ports:
      - 8082:8082
    depends_on:
      - postgres
      - kafka

  microservice-payment:
    restart: always
    build: microservices/payment
    command: python -m src.payment start
    environment:
      - PYTHONPATH=/microservice
      - MINOS_EVENTS_QUEUE_HOST=postgres
      - MINOS_EVENTS_BROKER=kafka
      - MINOS_COMMANDS_QUEUE_HOST=postgres
      - MINOS_COMMANDS_BROKER=kafka
      - MINOS_REPOSITORY_HOST=postgres
      - MINOS_SNAPSHOT_HOST=postgres
      - MINOS_SAGA_QUEUE_HOST=postgres
      - MINOS_SAGA_BROKER=kafka
    ports:
      - 8084:8084
    depends_on:
      - postgres
      - kafka


# FIXME: Improve configuration
#  integration-tests:
#    restart: always
#    build: integration_tests/

volumes:
  postgres_volume:
