version: 2
name: order
injections:
  - src.OrderQueryRepository
databases:
  default:
    client: minos.plugins.aiopg.AiopgDatabaseClient
    database: order_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
  snapshot:
    client: minos.plugins.aiopg.AiopgDatabaseClient
    flavor: mysql
    database: order_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
  broker:
    client: minos.plugins.aiopg.AiopgDatabaseClient
    database: order_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
  saga:
    client: minos.plugins.lmdb.LmdbDatabaseClient
    path: "./order.lmdb"
interfaces:
  broker:
    port: minos.networks.BrokerPort
    common:
      queue:
        records: 1000
        retry: 2
    publisher:
      client: minos.plugins.kafka.KafkaBrokerPublisher
      queue: minos.networks.DatabaseBrokerPublisherQueue
    subscriber:
      client: minos.plugins.kafka.KafkaBrokerSubscriber
      queue: minos.networks.DatabaseBrokerSubscriberQueue
      validator: minos.networks.DatabaseBrokerSubscriberDuplicateValidator
  http:
    port: minos.networks.HttpPort
    connector:
      client: minos.plugins.aiohttp.AioHttpConnector
      host: 0.0.0.0
      port: 8082
  periodic:
    port: minos.networks.PeriodicPort
pools:
  lock: minos.common.DatabaseLockPool
  database: minos.common.DatabaseClientPool
  broker: minos.networks.BrokerClientPool
discovery:
  connector: minos.networks.DiscoveryConnector
  client: minos.plugins.minos_discovery.MinosDiscoveryClient
  host: localhost
  port: 5567
saga:
  manager: minos.saga.SagaManager
aggregate:
  client: src.aggregates.OrderAggregate
  publisher:
      client: minos.networks.TransactionalBrokerPublisher
      repository: minos.networks.DatabaseBrokerPublisherTransactionRepository
  entities:
    - src.aggregates.Order
  repositories:
    transaction: minos.transactions.DatabaseTransactionRepository
    event: minos.aggregate.DatabaseDeltaRepository
    snapshot: minos.aggregate.DatabaseSnapshotRepository
routers:
  - minos.networks.BrokerRouter
  - minos.networks.PeriodicRouter
  - minos.networks.RestHttpRouter
middleware:
  - minos.saga.transactional_command
services:
  - minos.networks.SystemService
  - minos.aggregate.SnapshotService
  - minos.saga.SagaService
  - src.OrderQueryService
  - src.OrderCommandService
