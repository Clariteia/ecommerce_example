service:
  name: cart
  aggregate: src.aggregates.Cart
  injections:
    http_connector: minos.plugins.aiohttp.AioHttpConnector
    lock_pool: minos.common.DatabaseLockPool
    database_pool: minos.common.DatabaseClientPool
    broker_publisher: minos.plugins.kafka.KafkaBrokerPublisher
    broker_subscriber_builder: minos.plugins.kafka.KafkaBrokerSubscriberBuilder
    broker_pool: minos.networks.BrokerClientPool
    transaction_repository: minos.aggregate.DatabaseTransactionRepository
    event_repository: minos.aggregate.DatabaseEventRepository
    snapshot_repository: minos.aggregate.DatabaseSnapshotRepository
    saga_manager: minos.saga.SagaManager
    discovery: minos.networks.DiscoveryConnector
    cart_repository: src.CartQueryRepository
  services:
    - minos.networks.BrokerPort
    - minos.networks.HttpPort
    - minos.networks.PeriodicPort
routers:
  - minos.networks.BrokerRouter
  - minos.networks.PeriodicRouter
  - minos.networks.RestHttpRouter
middleware:
  - minos.saga.transactional_command
services:
  - minos.networks.SystemService
  - minos.aggregate.TransactionService
  - minos.aggregate.SnapshotService
  - minos.saga.SagaService
  - src.CartCommandService
  - src.CartQueryService
rest:
  port: 8088
saga:
  storage:
    client: minos.plugins.lmdb.LmdbDatabaseClient
broker:
  queue:
    client: minos.plugins.aiopg.AiopgDatabaseClient
    database: cart_db
repository:
  client: minos.plugins.aiopg.AiopgDatabaseClient
  database: cart_db
snapshot:
  client: minos.plugins.aiopg.AiopgDatabaseClient
  database: cart_db
discovery:
  client: minos.plugins.minos_discovery.MinosDiscoveryClient