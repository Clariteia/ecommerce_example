service:
  name: user
  aggregate: src.aggregates.Customer
  injections:
    http_connector: minos.plugins.aiohttp.AioHttpConnector
    lock_pool: minos.common.DatabaseLockPool
    database_pool: minos.common.DatabaseClientPool
    broker_publisher: minos.plugins.kafka.KafkaBrokerPublisher
    broker_subscriber_builder: minos.plugins.kafka.KafkaBrokerSubscriberBuilder
    broker_pool: minos.networks.BrokerClientPool
    transaction_repository: minos.aggregate.DatabaseTransactionRepository
    event_repository: minos.aggregate.DatabaseEventRepository
    snapshot_repository: minos.aggregate.DatabaseSnapshotRepository
    saga_manager: minos.saga.SagaManager
    discovery: minos.networks.DiscoveryConnector
  services:
    - minos.networks.BrokerPort
    - minos.networks.HttpPort
    - minos.networks.PeriodicPort
routers:
  - minos.networks.BrokerRouter
  - minos.networks.PeriodicRouter
  - minos.networks.RestHttpRouter
middleware:
  - minos.saga.transactional_command
services:
  - minos.networks.SystemService
  - minos.aggregate.TransactionService
  - minos.aggregate.SnapshotService
  - minos.saga.SagaService
  - src.CustomerQueryService
  - src.CustomerCommandService
rest:
  host: 0.0.0.0
  port: 8086
broker:
  queue:
    client: minos.plugins.aiopg.AiopgDatabaseClient
    database: customer_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
    records: 1000
    retry: 2
repository:
  client: minos.plugins.aiopg.AiopgDatabaseClient
  database: customer_db
  user: minos
  password: min0s
  host: localhost
  port: 5432
snapshot:
  client: minos.plugins.aiopg.AiopgDatabaseClient
  database: customer_db
  user: minos
  password: min0s
  host: localhost
  port: 5432
saga:
  storage:
    client: minos.plugins.lmdb.LmdbDatabaseClient
    path: "./customer.lmdb"
discovery:
  client: minos.plugins.minos_discovery.MinosDiscoveryClient
  host: localhost
  port: 5567